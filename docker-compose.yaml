services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    container_name: zookeeper
    ports:
      - 22181:2181
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "statistics:1:1"
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - 8090:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
  service.discovery:
    ports:
      - 8761:8761
    build:
      context: ServiceDiscovery
    container_name: service.discovery
  authorization.manager:
    ports:
      - 10001:10001
    build:
      context: AuthorizationManager
    container_name: authorization.manager
    depends_on:
      - service.discovery
  account.manager:
    ports:
      - 10002:10002
    build:
      context: AccountManager
    container_name: account.manager
    depends_on:
      - service.discovery
      - authorization.manager
      - database
  statistics.manager:
    ports:
      - 10003:10003
    build:
      context: StatisticsManager
    container_name: statistics.manager
    depends_on:
      - service.discovery
      - database
      - kafka
  video.streaming:
    ports:
      - 10000:10000
    build:
      context: VideoStreaming
    container_name: video.streaming
    depends_on:
      - service.discovery
      - minio
      - database
      - kafka
  minio:
    image: minio/minio:latest
    ports:
      - 9000:9000
      - 9001:9001
    container_name: minio
    volumes:
      - minio_storage:/data
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server --console-address ":9001" /data
  database:
    image: postgres:latest
    restart: always
    container_name: database
    environment:
      POSTGRES_DB: videostreaming
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
    ports:
      - 5432:5432
    volumes:
      - db:/var/lib/postgresql/data

volumes:
  minio_storage: { }
  db:
    driver: local
